{"version":3,"file":"apex-wrapped.cjs.production.min.js","sources":["../src/defaults/line.tsx","../src/tools/formatValues.ts","../src/Chart/Chart.tsx","../src/Line/Line.tsx"],"sourcesContent":["export const lineDefaults = {\n  colors: ['#343334', '#e7e1df', '#2dc9be', '#aba228', '#696e6e'],\n};\n","import dayjs from 'dayjs';\n\nconst formatDate = (date: Date, dateFormat: undefined | string): string => {\n  const format = dateFormat ? dateFormat : 'MM/DD/YYYY';\n  return dayjs(new Date(date)).format(format);\n};\n\nexport { formatDate };\n","import React, { useEffect } from 'react';\nimport AC from 'apexcharts';\n\nimport { IChartOptions } from '../types/charts';\nimport { lineDefaults } from '../defaults/line';\n\ntype IProps = IChartOptions;\n\nexport const Chart = (props: IProps) => {\n  useEffect(() => {\n    const chart = new AC(document.querySelector('#chartGeneral'), {\n      ...props,\n      ...lineDefaults,\n    });\n    chart.render();\n  }, [props]);\n\n  return <div id=\"chartGeneral\" />;\n};\n","import React, { FC, useEffect } from 'react';\nimport ApexChart from 'apexcharts';\n\nimport { IDataSeries, Categories } from '../types/charts';\nimport { lineDefaults } from '../defaults/line';\nimport { formatDate } from '../tools/formatValues';\n\nexport interface IProps {\n  series: IDataSeries[];\n  categories: Categories;\n  dateFormat?: string;\n}\n\nexport const Line: FC<IProps> = (props: IProps) => {\n  const { series, categories, dateFormat } = props;\n  console.log(Object.getPrototypeOf(categories[0]));\n\n  useEffect(() => {\n    const chart = new ApexChart(document.querySelector('#chartLine'), {\n      ...lineDefaults,\n      series,\n      chart: { type: 'line' },\n      xaxis: {\n        categories,\n        labels: {\n          formatter: (value: number | Date | string) => {\n            if (value instanceof Date) {\n              console.log(formatDate(value, dateFormat));\n              return formatDate(value, dateFormat);\n            }\n            return value;\n          },\n        },\n      },\n    });\n    chart.render();\n  }, [props]);\n\n  return <div id=\"chartLine\" />;\n};\n"],"names":["lineDefaults","colors","formatDate","date","dateFormat","format","dayjs","Date","props","useEffect","AC","document","querySelector","render","React","id","series","categories","console","log","Object","getPrototypeOf","ApexChart","chart","type","xaxis","labels","formatter","value"],"mappings":"waAAO,IAAMA,EAAe,CAC1BC,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,YCCjDC,EAAa,SAACC,EAAYC,OACxBC,EAASD,GAA0B,oBAClCE,EAAM,IAAIC,KAAKJ,IAAOE,OAAOA,kBCIjB,SAACG,UACpBC,aAAU,WACM,IAAIC,EAAGC,SAASC,cAAc,sBACvCJ,EACAR,IAECa,WACL,CAACL,IAEGM,uBAAKC,GAAG,+BCJe,SAACP,OACvBQ,EAAmCR,EAAnCQ,OAAQC,EAA2BT,EAA3BS,WAAYb,EAAeI,EAAfJ,kBAC5Bc,QAAQC,IAAIC,OAAOC,eAAeJ,EAAW,KAE7CR,aAAU,WACM,IAAIa,EAAUX,SAASC,cAAc,mBAC9CZ,GACHgB,OAAAA,EACAO,MAAO,CAAEC,KAAM,QACfC,MAAO,CACLR,WAAAA,EACAS,OAAQ,CACNC,UAAW,SAACC,UACNA,aAAiBrB,MACnBW,QAAQC,IAAIjB,EAAW0B,EAAOxB,IACvBF,EAAW0B,EAAOxB,IAEpBwB,QAKTf,WACL,CAACL,IAEGM,uBAAKC,GAAG"}